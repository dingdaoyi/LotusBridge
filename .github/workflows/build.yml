name: Build

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
#
#      - name: Install ARM target
#        if: ${{ matrix.os == 'ubuntu-latest' }}
#        run: rustup target add armv7-unknown-linux-gnueabihf && sudo apt-get update && sudo apt-get install -y gcc-arm-linux-gnueabihf
#
#      - name: Set up vcpkg on Windows
#        if: ${{ matrix.os == 'windows-latest' }}
#        run: |
#          git clone https://github.com/microsoft/vcpkg.git
#          cd vcpkg
#          .\bootstrap-vcpkg.bat
#          .\vcpkg integrate install
#          cd ..
#
#      - name: Install OpenSSL and other dependencies using vcpkg
#        if: ${{ matrix.os == 'windows-latest' }}
#        run: |
#          vcpkg install openssl
#          vcpkg install other_dependencies  # Add other dependencies as needed

      - name: Build
        run: cargo build --release

      - name: Archive artifacts
        run: |
          cp target/release/lotus-bridge* ./
          tar -czvf artifacts.tar.gz ./lotus-bridge* conf sqlite.db
        # 暂时不 考虑交叉编译
        #          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
        #            cargo build --release --target=armv7-unknown-linux-gnueabihf
        #            tar -czvf artifacts-arm.tar.gz target/armv7-unknown-linux-gnueabihf/release
        #          fi
        if: success()

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-package
          path: |
            artifacts.tar.gz