openapi: 3.0.0
info:
  title: LotusBridge
  description: 接口文档,可能有问题
  version: 1.0.0

paths:
  /plugin/list:
    get:
      summary: 查询所有插件
      operationId: getAllPluginConfigs
      tags:
        - 插件管理
      parameters:
        - name: pluginType
          in: query
          description: 插件类型,包含Protocol,DataOutput,RuleEngine
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PluginConfig'
  /plugin/{id}:
    get:
      summary: 插件详情
      operationId: getPluginConfigById
      tags:
        - 插件管理
      parameters:
        - name: id
          in: path
          description: 插件id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfig'
        '404':
          description: 插件未找到
    put:
      summary: 修改插件
      operationId: updatePlugin
      tags:
        - 插件管理
      parameters:
        - name: id
          in: path
          description: 插件id
          required: true
          schema:
            type: integer
      requestBody:
        description: 请求体
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PluginConfig'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/R'
        '400':
          description: Invalid request
    delete:
      summary: 删除插件
      operationId: deletePluginConfigById
      tags:
        - 插件管理
      parameters:
        - name: id
          in: path
          description: 插件id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/R'
        '404':
          description: 插件未找到
  /plugin:
    post:
      summary: 添加插件
      operationId: createPlugin
      tags:
        - 插件管理
      requestBody:
        description: 请求体
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePluginConfig'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/R'
        '400':
          description: Invalid request
  /login:
    post:
      summary: 用户登录
      operationId: loginUser
      tags:
        - 认证接口
      requestBody:
        description: 登录信息
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginPayload'
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RString'
        '400':
          description: Invalid request
        '401':
          description: Unauthorized
  /device-group:
    post:
      summary: 创建设备组
      operationId: createDeviceGroup
      tags:
        - 设备组管理
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDeviceGroup'
      responses:
        '200':
          description: 成功创建设备组
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDeviceGroup'

  /device-group/list/{device_id}:
    get:
      summary: 获取设备组列表
      operationId: listDeviceGroups
      tags:
        - 设备组管理
      parameters:
        - name: device_id
          in: path
          description: 设备 ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 成功获取设备组列表
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDeviceGroupList'

  /device-group/{id}:
    get:
      summary: 获取设备组详情
      operationId: getDeviceGroup
      tags:
        - 设备组管理
      parameters:
        - name: id
          in: path
          description: 设备组 ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 成功获取设备组详情
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RDeviceGroup'
        '404':
          description: 设备组不存在

    put:
      summary: 更新设备组
      operationId: updateDeviceGroup
      tags:
        - 设备组管理
      parameters:
        - name: id
          in: path
          description: 设备组 ID
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceGroup'
      responses:
        '200':
          description: 成功更新设备组
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RString'
        '404':
          description: 设备组不存在

    delete:
      summary: 删除设备组
      operationId: deleteDeviceGroup
      tags:
        - 设备组管理
      parameters:
        - name: id
          in: path
          description: 设备组 ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 成功删除设备组
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RString'
        '404':
          description: 设备组不存在
  /device/{id}:
    get:
      summary: Get device by ID
      operationId: getDevice
      tags:
        - 设备管理
      parameters:
        - name: id
          in: path
          description: Device ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceDTO'
        '404':
          description: Device not found
    put:
      summary: Update device by ID
      operationId: updateDevice
      tags:
        - 设备管理
      parameters:
        - name: id
          in: path
          description: Device ID
          required: true
          schema:
            type: integer
      requestBody:
        description: Request body
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceDTO'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RString'
        '404':
          description: Device not found

  /device:
    get:
      summary: Get all devices
      operationId: listDevices
      tags:
        - 设备管理
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceDTO'
    post:
      summary: Create a new device
      operationId: createDevice
      tags:
        - 设备管理
      requestBody:
        description: Request body
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDevice'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceDTO'

  /device/{device_id}:
    delete:
      summary: Delete device by ID
      operationId: deleteDevice
      tags:
        - 设备管理
      parameters:
        - name: device_id
          in: path
          description: Device ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RString'
  /export-config:
    post:
      summary: 创建导出配置
      tags:
        - 导出配置
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportConfig'
      responses:
        '200':
          description: 操作成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RExportConfig'
  /export-config/{id}:
    get:
      summary: 获取导出配置详情
      tags:
        - 导出配置
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 操作成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RExportConfig'
    put:
      summary: 更新导出配置
      tags:
        - 导出配置
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportConfig'
      responses:
        '200':
          description: 操作成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
    delete:
      summary: 删除导出配置
      tags:
        - 导出配置
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 操作成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /export-config/list:
    get:
      summary: 获取导出配置列表
      tags:
        - 导出配置
      parameters:
        - in: query
          name: plugin_id
          schema:
            type: integer
      responses:
        '200':
          description: 操作成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RExportConfigListResponse'
  /point/{id}:
    get:
      summary: 获取点位详情
      tags:
        - 点位管理
      parameters:
        - name: id
          in: path
          description: 点位id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response with the point information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Point'
        '404':
          description: Point not found

    put:
      summary: 修改点位
      tags:
        - 点位管理
      parameters:
        - name: id
          in: path
          description: ID of the point to update
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Point'
      responses:
        '200':
          description: Point updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'

    delete:
      summary: 删除点位
      tags:
        - 点位管理
      parameters:
        - name: id
          in: path
          description: ID of the point to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Point deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'

  /point:
    post:
      summary: 创建点位
      tags:
        - 点位管理
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePoint'
      responses:
        '200':
          description: Point created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'

  /point/value/{id}:
    get:
      summary: 读取点位的值
      tags:
        - 点位管理
      parameters:
        - name: id
          in: path
          description: 点位id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response with the value of the point
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Value'
        '404':
          description: Point not found

    post:
      summary: 可写的点位写值
      tags:
        - 点位管理
      parameters:
        - name: id
          in: path
          description: 点位id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WriterValue'
      responses:
        '200':
          description: Value written successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'

components:
  schemas:
    PluginConfig:
      type: object
      properties:
        id:
          type: integer
          description: id
          required: false
        description:
          type: string
          description: 描述
        formCustomization:
          type: string
          description: 自定义表单属性
        name:
          type: string
          description: 表单名称
        pluginType:
          $ref: '#/components/schemas/PluginType'
    CreatePluginConfig:
      type: object
      properties:
        name:
          type: string
          description: 协议名称
        description:
          type: string
          nullable: true
          description: 描述
        formCustomization:
          type: string
          nullable: true
          description: 自定义表单属性
        pluginType:
          $ref: '#/components/schemas/PluginType'
    PluginType:
      description: 插件类型、Protocol协议,DataOutput,北向应用,RuleEngine规则引擎
      type: string
      enum:
        - Protocol
        - DataOutput
        - RuleEngine
    R:
      type: object
      properties:
        code:
          type: integer
          description: 响应码
        success:
          type: boolean
          description: 响应是否成功
        msg:
          type: string
          description: 响应消息
        data:
          nullable: true
          description: 响应数据
    LoginPayload:
      type: object
      properties:
        username:
          type: string
          description: 用户名
        password:
          type: string
          description: 密码
    CreateDeviceGroup:
      type: object
      properties:
        name:
          type: string
          description: 设备组名称
        interval:
          type: integer
          description: 间隔时间
        device_id:
          type: integer
          description: 设备 ID

    DeviceGroup:
      type: object
      properties:
        id:
          type: integer
          description: 设备组 ID
        name:
          type: string
          description: 设备组名称
        interval:
          type: integer
          description: 间隔时间
        device_id:
          type: integer
          description: 设备 ID

    RDeviceGroup:
      type: object
      properties:
        code:
          type: integer
          description: 响应代码
        success:
          type: boolean
          description: 请求是否成功
        msg:
          type: string
          description: 响应消息
        data:
          $ref: '#/components/schemas/DeviceGroup'

    RDeviceGroupList:
      type: object
      properties:
        code:
          type: integer
          description: 响应代码
        success:
          type: boolean
          description: 请求是否成功
        msg:
          type: string
          description: 响应消息
        data:
          type: array
          items:
            $ref: '#/components/schemas/DeviceGroup'

    RString:
      type: object
      properties:
        code:
          type: integer
          description: 响应代码
        success:
          type: boolean
          description: 请求是否成功
        msg:
          type: string
          description: 响应消息
    DeviceDTO:
      type: object
      properties:
        id:
          type: integer
          description: 'id'
        name:
          type: string
          description: '设备名称'
        deviceType:
          type: string
          description: '设备类型:Gateway网关,Independent直连'
        customData:
          type: object
          additionalProperties:
            type: string
        protocolName:
          type: string
    CreateDevice:
      type: object
      properties:
        name:
          type: string
        deviceType:
          type: string
          description: '设备类型:Gateway网关,Independent直连'
        customData:
          type: object
          additionalProperties:
            type: string
        protocolName:
          type: string
    ExportConfig:
      type: object
      properties:
        id:
          type: integer
          description: 导出配置ID
        name:
          type: string
          description: 推送名称
        configuration:
          type: object
          additionalProperties:
            type: string
          description: 推送配置
        description:
          type: string
          description: 描述
        plugin_id:
          type: integer
          description: 插件ID
    RExportConfig:
      type: object
      properties:
        code:
          type: integer
          description: 响应代码
        success:
          type: boolean
          description: 请求是否成功
        msg:
          type: string
          description: 响应消息
        data:
          $ref: '#/components/schemas/ExportConfig'
    RExportConfigListResponse:
      type: object
      properties:
        code:
          type: integer
          description: 响应代码
        success:
          type: boolean
          description: 请求是否成功
        msg:
          type: string
          description: 响应消息
        data:
          type: array
          items:
            $ref: '#/components/schemas/ExportConfig'
    SuccessResponse:
      type: object
      properties:
        success:
          type: boolean
          description: 请求是否成功
        message:
          type: string
          description: 响应消息
    Point:
      type: object
      properties:
        id:
          type: integer
        deviceId:
          type: integer
        groupId:
          type: integer
        address:
          type: string
        dataType:
          type: string
        accessMode:
          type: string
        multiplier:
          type: integer
        precision:
          type: integer
        description:
          type: string
        partNumber:
          type: string

    CreatePoint:
      type: object
      properties:
        groupId:
          type: integer
        address:
          type: string
        dataType:
          type: string
        accessMode:
          type: string
        multiplier:
          type: integer
        precision:
          type: integer
        description:
          type: string
        partNumber:
          type: string

    Value:
      type: object
      properties:
        value:
          type: object # Change the type based on the actual data type of the value

    WriterValue:
      type: object
      properties:
        value:
          type: object # Change the type based on the actual data type of the value

    Response:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
